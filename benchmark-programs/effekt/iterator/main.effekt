import list
import args
import bench


effect Emit(e: Int): Unit

def range(l: Int, u: Int): Unit / Emit =
  if(l > u) {
    ()
  } else {
    do Emit(l);
    range(l + 1, u)
  }

def run(n: Int) = {
  var s = 0;
  try {
    range(0, n);
    s
  } with Emit { (e: Int) =>
    s = s + e;
    resume(())
  }
}

def main() = ignore[WrongFormat] {commandLineArgs() match {
  case Nil() => println("Expects one argument")
  case Cons(x, Cons(y, Nil())) => 
    println("Measuring internal running time")
    val i = x.toInt; var r = 0; val t = timed{ r = run(i); };
    println("Nanosecond used: " ++ show(t))
    println(r)
  case Cons(x, Nil()) =>
    val i = x.toInt; val r = run(i);
    println(r)
  case other => println("Expects one argument, not '" ++ show(size(other)) ++ "'")
}
}
