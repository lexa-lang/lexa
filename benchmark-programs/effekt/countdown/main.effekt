import list
import args
import bench

effect Get() : Int
effect Set(i: Int): Unit

def countdown(): Int / {Get, Set} = {
  val i = do Get();
  if (i == 0) {
    i
  } else {
    do Set(i - 1);
    countdown()
  }
}

def run(n: Int) = {
  var s = n;
  try {
    countdown()
  } with Get { () => resume(s)
  } with Set { (i: Int) => s = i; resume(())
  }
}

def main() = ignore[WrongFormat] {commandLineArgs() match {
  case Nil() => println("Expects one argument")
  case Cons(x, Cons(y, Nil())) => 
    println("Measuring internal running time")
    val t = timed{ run(x.toInt); () }
    println("Nanosecond used: " ++ show(t))
  case Cons(x, Nil()) =>
    val r = run(x.toInt)
    println(r)
  case other => println("Expects one argument, not '" ++ show(size(other)) ++ "'")
}
}
