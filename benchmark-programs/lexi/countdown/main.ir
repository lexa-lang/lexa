effect State {
    dcl get
    dcl set
}

def countdown(state_stub) {
    val i = raise state_stub.get 0;
    if i == 0 then
        i
    else
        val _ = raise state_stub.set(i-1);
        countdown(state_stub)
}

obj state(env) {
    def get(_) { 
        env[0][0]
    }

    def set(i) {
        val _ = env[0][0] := i;
        0
    }
}

def body(env, state_stub) {
    countdown(state_stub)
}

def run(n) {
    val s = newref {n};
    handle {s}
        body
    with state: State
}

def main() {
    val _ = ~printInt(run(~readInt()));
    0
}