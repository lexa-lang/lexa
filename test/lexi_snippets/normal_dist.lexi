def normal(mu, sigma) {
    val u1 = ~floatRand();
    val u2 = ~floatRand();
    val r = ~floatSqrt(~floatMul(~boxFloat(-2), ~floatLog(u1)));
    val theta = ~floatMul(~floatMul(~boxFloat(2), ~floatPi()), u2);
    val u3 = ~floatRand();
    ~printFloat(u1);
    ~printFloat(u2);
    ~printFloat(r);
    ~printFloat(theta);
    ~printFloat(u3);
    if ~floatLt(u3, ~boxFloat(0.5)) then
        ~floatAdd(mu, ~floatMul(~floatMul(sigma, r), ~floatCos(theta)))
    else
        ~floatAdd(mu, ~floatMul(~floatMul(sigma, r), ~floatSin(theta)))
}

def main() {
    val x = normal(~boxFloat(0), ~boxFloat(1));
    ~printFloat(x);
    0
}