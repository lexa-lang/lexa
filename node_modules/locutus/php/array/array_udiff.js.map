{"version":3,"sources":["../../../src/php/array/array_udiff.js"],"names":["module","exports","array_udiff","arr1","retArr","arglm1","arguments","length","cb","arr","i","k1","k","$global","window","global","Object","prototype","toString","call","arr1keys"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,EAAf;AACA,MAAMC,SAASC,UAAUC,MAAV,GAAmB,CAAlC;AACA,MAAIC,KAAKF,UAAUD,MAAV,CAAT;AACA,MAAII,MAAM,EAAV;AACA,MAAIC,IAAI,CAAR;AACA,MAAIC,KAAK,EAAT;AACA,MAAIC,IAAI,EAAR;;AAEA,MAAMC,UAAU,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAzD;;AAEAP,OACE,OAAOA,EAAP,KAAc,QAAd,GACIK,QAAQL,EAAR,CADJ,GAEIQ,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BX,EAA/B,MAAuC,gBAAvC,GACEK,QAAQL,GAAG,CAAH,CAAR,EAAeA,GAAG,CAAH,CAAf,CADF,GAEEA,EALR;;AAOAY,YAAU,KAAKT,EAAL,IAAWR,IAAX,EAAiB;AACzB,SAAKO,IAAI,CAAT,EAAYA,IAAIL,MAAhB,EAAwBK,GAAxB,EAA6B;AAC3BD,YAAMH,UAAUI,CAAV,CAAN;AACA,WAAKE,CAAL,IAAUH,GAAV,EAAe;AACb,YAAID,GAAGC,IAAIG,CAAJ,CAAH,EAAWT,KAAKQ,EAAL,CAAX,MAAyB,CAA7B,EAAgC;AAC9B;AACA,mBAASS,QAAT,CAF8B,CAEZ;AACnB;AACF;AACDhB,aAAOO,EAAP,IAAaR,KAAKQ,EAAL,CAAb;AACD;AACF;;AAED,SAAOP,MAAP;AACD,CAvCD","file":"array_udiff.js","sourcesContent":["module.exports = function array_udiff(arr1) {\n  //  discuss at: https://locutus.io/php/array_udiff/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_udiff($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {c: 'blue'}\n\n  const retArr = {}\n  const arglm1 = arguments.length - 1\n  let cb = arguments[arglm1]\n  let arr = ''\n  let i = 1\n  let k1 = ''\n  let k = ''\n\n  const $global = typeof window !== 'undefined' ? window : global\n\n  cb =\n    typeof cb === 'string'\n      ? $global[cb]\n      : Object.prototype.toString.call(cb) === '[object Array]'\n        ? $global[cb[0]][cb[1]]\n        : cb\n\n  arr1keys: for (k1 in arr1) {\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n"]}