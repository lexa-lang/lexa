{"version":3,"sources":["../../../src/php/array/array_multisort.js"],"names":["module","exports","array_multisort","arr","g","i","j","k","l","sal","vkey","elIndex","lastSorts","tmpArray","zlast","sortFlag","thingsToSort","nLastSort","lastSort","args","arguments","flags","SORT_REGULAR","SORT_NUMERIC","SORT_STRING","SORT_ASC","SORT_DESC","sortDuplicator","a","b","shift","sortFunctions","push","sortArrs","sortKeys","Object","prototype","toString","call","hasOwnProperty","arrMainLength","length","sortComponents","argl","lFlag","pop","splice","sFunction","slice","sort","concat"],"mappings":"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","file":"array_multisort.js","sourcesContent":["module.exports = function array_multisort(arr) {\n  //  discuss at: https://locutus.io/php/array_multisort/\n  // original by: Theriault (https://github.com/Theriault)\n  // improved by: Oleg Andreyev (https://github.com/oleg-andreyev)\n  //   example 1: array_multisort([1, 2, 1, 2, 1, 2], [1, 2, 3, 4, 5, 6])\n  //   returns 1: true\n  //   example 2: var $characters = {A: 'Edward', B: 'Locke', C: 'Sabin', D: 'Terra', E: 'Edward'}\n  //   example 2: var $jobs = {A: 'Warrior', B: 'Thief', C: 'Monk', D: 'Mage', E: 'Knight'}\n  //   example 2: array_multisort($characters, 'SORT_DESC', 'SORT_STRING', $jobs, 'SORT_ASC', 'SORT_STRING')\n  //   returns 2: true\n  //   example 3: var $lastnames = [ 'Carter','Adams','Monroe','Tyler','Madison','Kennedy','Adams']\n  //   example 3: var $firstnames = ['James', 'John' ,'James', 'John', 'James',  'John',   'John']\n  //   example 3: var $president = [ 39, 6, 5, 10, 4, 35, 2 ]\n  //   example 3: array_multisort($firstnames, 'SORT_DESC', 'SORT_STRING', $lastnames, 'SORT_ASC', 'SORT_STRING', $president, 'SORT_NUMERIC')\n  //   returns 3: true\n  //   example 4: array_multisort([\"productIds[]\", \"_\"], 'SORT_ASC', [\"productIds[]=977385529\", \"_=1502965788347\"])\n  //   returns 4: true\n  //      note 1: flags: Translation table for sort arguments.\n  //      note 1: Each argument turns on certain bits in the flag byte through addition.\n  //      note 1: bits: HGFE DCBA\n  //      note 1: args: Holds pointer to arguments for reassignment\n\n  let g\n  let i\n  let j\n  let k\n  let l\n  let sal\n  let vkey\n  let elIndex\n  let lastSorts\n  let tmpArray\n  let zlast\n\n  const sortFlag = [0]\n  const thingsToSort = []\n  let nLastSort = []\n  let lastSort = []\n  // possibly redundant\n  const args = arguments\n\n  const flags = {\n    SORT_REGULAR: 16,\n    SORT_NUMERIC: 17,\n    SORT_STRING: 18,\n    SORT_ASC: 32,\n    SORT_DESC: 40,\n  }\n\n  const sortDuplicator = function (a, b) {\n    return nLastSort.shift()\n  }\n\n  const sortFunctions = [\n    [\n      function (a, b) {\n        lastSort.push(a > b ? 1 : a < b ? -1 : 0)\n        return a > b ? 1 : a < b ? -1 : 0\n      },\n      function (a, b) {\n        lastSort.push(b > a ? 1 : b < a ? -1 : 0)\n        return b > a ? 1 : b < a ? -1 : 0\n      },\n    ],\n    [\n      function (a, b) {\n        lastSort.push(a - b)\n        return a - b\n      },\n      function (a, b) {\n        lastSort.push(b - a)\n        return b - a\n      },\n    ],\n    [\n      function (a, b) {\n        lastSort.push(a + '' > b + '' ? 1 : a + '' < b + '' ? -1 : 0)\n        return a + '' > b + '' ? 1 : a + '' < b + '' ? -1 : 0\n      },\n      function (a, b) {\n        lastSort.push(b + '' > a + '' ? 1 : b + '' < a + '' ? -1 : 0)\n        return b + '' > a + '' ? 1 : b + '' < a + '' ? -1 : 0\n      },\n    ],\n  ]\n\n  const sortArrs = [[]]\n\n  const sortKeys = [[]]\n\n  // Store first argument into sortArrs and sortKeys if an Object.\n  // First Argument should be either a Javascript Array or an Object,\n  // otherwise function would return FALSE like in PHP\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    sortArrs[0] = arr\n  } else if (arr && typeof arr === 'object') {\n    for (i in arr) {\n      if (arr.hasOwnProperty(i)) {\n        sortKeys[0].push(i)\n        sortArrs[0].push(arr[i])\n      }\n    }\n  } else {\n    return false\n  }\n\n  // arrMainLength: Holds the length of the first array.\n  // All other arrays must be of equal length, otherwise function would return FALSE like in PHP\n  // sortComponents: Holds 2 indexes per every section of the array\n  // that can be sorted. As this is the start, the whole array can be sorted.\n  const arrMainLength = sortArrs[0].length\n  let sortComponents = [0, arrMainLength]\n\n  // Loop through all other arguments, checking lengths and sort flags\n  // of arrays and adding them to the above variables.\n  const argl = arguments.length\n  for (j = 1; j < argl; j++) {\n    if (Object.prototype.toString.call(arguments[j]) === '[object Array]') {\n      sortArrs[j] = arguments[j]\n      sortFlag[j] = 0\n      if (arguments[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (arguments[j] && typeof arguments[j] === 'object') {\n      sortKeys[j] = []\n      sortArrs[j] = []\n      sortFlag[j] = 0\n      for (i in arguments[j]) {\n        if (arguments[j].hasOwnProperty(i)) {\n          sortKeys[j].push(i)\n          sortArrs[j].push(arguments[j][i])\n        }\n      }\n      if (sortArrs[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (typeof arguments[j] === 'string') {\n      const lFlag = sortFlag.pop()\n      // Keep extra parentheses around latter flags check\n      // to avoid minimization leading to CDATA closer\n      if (typeof flags[arguments[j]] === 'undefined' || ((flags[arguments[j]] >>> 4) & (lFlag >>> 4)) > 0) {\n        return false\n      }\n      sortFlag.push(lFlag + flags[arguments[j]])\n    } else {\n      return false\n    }\n  }\n\n  for (i = 0; i !== arrMainLength; i++) {\n    thingsToSort.push(true)\n  }\n\n  // Sort all the arrays....\n  for (i in sortArrs) {\n    if (sortArrs.hasOwnProperty(i)) {\n      lastSorts = []\n      tmpArray = []\n      elIndex = 0\n      nLastSort = []\n      lastSort = []\n\n      // If there are no sortComponents, then no more sorting is neeeded.\n      // Copy the array back to the argument.\n      if (sortComponents.length === 0) {\n        if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n          args[i] = sortArrs[i]\n        } else {\n          for (k in arguments[i]) {\n            if (arguments[i].hasOwnProperty(k)) {\n              delete arguments[i][k]\n            }\n          }\n          sal = sortArrs[i].length\n          for (j = 0, vkey = 0; j < sal; j++) {\n            vkey = sortKeys[i][j]\n            args[i][vkey] = sortArrs[i][j]\n          }\n        }\n        sortArrs.splice(i, 1)\n        sortKeys.splice(i, 1)\n        continue\n      }\n\n      // Sort function for sorting. Either sorts asc or desc, regular/string or numeric.\n      let sFunction = sortFunctions[sortFlag[i] & 3][(sortFlag[i] & 8) > 0 ? 1 : 0]\n\n      // Sort current array.\n      for (l = 0; l !== sortComponents.length; l += 2) {\n        tmpArray = sortArrs[i].slice(sortComponents[l], sortComponents[l + 1] + 1)\n        tmpArray.sort(sFunction)\n        // Is there a better way to copy an array in Javascript?\n        lastSorts[l] = [].concat(lastSort)\n        elIndex = sortComponents[l]\n        for (g in tmpArray) {\n          if (tmpArray.hasOwnProperty(g)) {\n            sortArrs[i][elIndex] = tmpArray[g]\n            elIndex++\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on future arrays.\n      sFunction = sortDuplicator\n      for (j in sortArrs) {\n        if (sortArrs.hasOwnProperty(j)) {\n          if (sortArrs[j] === sortArrs[i]) {\n            continue\n          }\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortArrs[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            // alert(l + ':' + nLastSort);\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortArrs[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on array keys\n      for (j in sortKeys) {\n        if (sortKeys.hasOwnProperty(j)) {\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortKeys[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortKeys[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Generate the next sortComponents\n      zlast = null\n      sortComponents = []\n      for (j in sortArrs[i]) {\n        if (sortArrs[i].hasOwnProperty(j)) {\n          if (!thingsToSort[j]) {\n            if (sortComponents.length & 1) {\n              sortComponents.push(j - 1)\n            }\n            zlast = null\n            continue\n          }\n          if (!(sortComponents.length & 1)) {\n            if (zlast !== null) {\n              if (sortArrs[i][j] === zlast) {\n                sortComponents.push(j - 1)\n              } else {\n                thingsToSort[j] = false\n              }\n            }\n            zlast = sortArrs[i][j]\n          } else {\n            if (sortArrs[i][j] !== zlast) {\n              sortComponents.push(j - 1)\n              zlast = sortArrs[i][j]\n            }\n          }\n        }\n      }\n\n      if (sortComponents.length & 1) {\n        sortComponents.push(j)\n      }\n      if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n        args[i] = sortArrs[i]\n      } else {\n        for (j in arguments[i]) {\n          if (arguments[i].hasOwnProperty(j)) {\n            delete arguments[i][j]\n          }\n        }\n\n        sal = sortArrs[i].length\n        for (j = 0, vkey = 0; j < sal; j++) {\n          vkey = sortKeys[i][j]\n          args[i][vkey] = sortArrs[i][j]\n        }\n      }\n      sortArrs.splice(i, 1)\n      sortKeys.splice(i, 1)\n    }\n  }\n  return true\n}\n"]}