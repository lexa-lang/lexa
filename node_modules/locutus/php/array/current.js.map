{"version":3,"sources":["../../../src/php/array/current.js"],"names":["module","exports","current","arr","$global","window","global","$locutus","php","pointers","indexOf","value","i","length","push","arrpos","cursor","Object","prototype","toString","call","ct","k"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAzD;AACAF,UAAQG,QAAR,GAAmBH,QAAQG,QAAR,IAAoB,EAAvC;AACA,MAAMA,WAAWH,QAAQG,QAAzB;AACAA,WAASC,GAAT,GAAeD,SAASC,GAAT,IAAgB,EAA/B;AACAD,WAASC,GAAT,CAAaC,QAAb,GAAwBF,SAASC,GAAT,CAAaC,QAAb,IAAyB,EAAjD;AACA,MAAMA,WAAWF,SAASC,GAAT,CAAaC,QAA9B;;AAEA,MAAMC,UAAU,SAAVA,OAAU,CAAUC,KAAV,EAAiB;AAC/B,SAAK,IAAIC,IAAI,CAAR,EAAWC,SAAS,KAAKA,MAA9B,EAAsCD,IAAIC,MAA1C,EAAkDD,GAAlD,EAAuD;AACrD,UAAI,KAAKA,CAAL,MAAYD,KAAhB,EAAuB;AACrB,eAAOC,CAAP;AACD;AACF;AACD,WAAO,CAAC,CAAR;AACD,GAPD;AAQA,MAAI,CAACH,SAASC,OAAd,EAAuB;AACrBD,aAASC,OAAT,GAAmBA,OAAnB;AACD;AACD,MAAID,SAASC,OAAT,CAAiBP,GAAjB,MAA0B,CAAC,CAA/B,EAAkC;AAChCM,aAASK,IAAT,CAAcX,GAAd,EAAmB,CAAnB;AACD;AACD,MAAMY,SAASN,SAASC,OAAT,CAAiBP,GAAjB,CAAf;AACA,MAAMa,SAASP,SAASM,SAAS,CAAlB,CAAf;AACA,MAAIE,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BjB,GAA/B,MAAwC,gBAA5C,EAA8D;AAC5D,WAAOA,IAAIa,MAAJ,KAAe,KAAtB;AACD;AACD,MAAIK,KAAK,CAAT;AACA,OAAK,IAAMC,CAAX,IAAgBnB,GAAhB,EAAqB;AACnB,QAAIkB,OAAOL,MAAX,EAAmB;AACjB,aAAOb,IAAImB,CAAJ,CAAP;AACD;AACDD;AACD;AACD;AACA,SAAO,KAAP;AACD,CA3CD","file":"current.js","sourcesContent":["module.exports = function current(arr) {\n  //  discuss at: https://locutus.io/php/current/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: current($transport)\n  //   returns 1: 'foot'\n\n  const $global = typeof window !== 'undefined' ? window : global\n  $global.$locutus = $global.$locutus || {}\n  const $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  const pointers = $locutus.php.pointers\n\n  const indexOf = function (value) {\n    for (let i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  const arrpos = pointers.indexOf(arr)\n  const cursor = pointers[arrpos + 1]\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    return arr[cursor] || false\n  }\n  let ct = 0\n  for (const k in arr) {\n    if (ct === cursor) {\n      return arr[k]\n    }\n    ct++\n  }\n  // Empty\n  return false\n}\n"]}