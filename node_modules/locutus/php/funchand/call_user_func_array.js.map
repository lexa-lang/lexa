{"version":3,"sources":["../../../src/php/funchand/call_user_func_array.js"],"names":["module","exports","call_user_func_array","cb","parameters","$global","window","global","func","scope","validJSFunctionNamePattern","match","Function","Object","prototype","toString","call","eval","Error","apply"],"mappings":";;;;AAAAA,OAAOC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,EAA9B,EAAkCC,UAAlC,EAA8C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAzD;AACA,MAAIC,aAAJ;AACA,MAAIC,QAAQ,IAAZ;;AAEA,MAAMC,6BAA6B,kDAAnC;;AAEA,MAAI,OAAOP,EAAP,KAAc,QAAlB,EAA4B;AAC1B,QAAI,OAAOE,QAAQF,EAAR,CAAP,KAAuB,UAA3B,EAAuC;AACrCK,aAAOH,QAAQF,EAAR,CAAP;AACD,KAFD,MAEO,IAAIA,GAAGQ,KAAH,CAASD,0BAAT,CAAJ,EAA0C;AAC/CF,aAAO,IAAII,QAAJ,CAAa,IAAb,EAAmB,YAAYT,EAA/B,GAAP,CAD+C,CACH;AAC7C;AACF,GAND,MAMO,IAAIU,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+Bb,EAA/B,MAAuC,gBAA3C,EAA6D;AAClE,QAAI,OAAOA,GAAG,CAAH,CAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAIA,GAAG,CAAH,EAAMQ,KAAN,CAAYD,0BAAZ,CAAJ,EAA6C;AAC3CF,eAAOS,KAAKd,GAAG,CAAH,IAAQ,IAAR,GAAeA,GAAG,CAAH,CAAf,GAAuB,IAA5B,CAAP,CAD2C,CACF;AAC1C;AACF,KAJD,MAIO;AACLK,aAAOL,GAAG,CAAH,EAAMA,GAAG,CAAH,CAAN,CAAP;AACD;;AAED,QAAI,OAAOA,GAAG,CAAH,CAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAI,OAAOE,QAAQF,GAAG,CAAH,CAAR,CAAP,KAA0B,UAA9B,EAA0C;AACxCM,gBAAQJ,QAAQF,GAAG,CAAH,CAAR,CAAR;AACD,OAFD,MAEO,IAAIA,GAAG,CAAH,EAAMQ,KAAN,CAAYD,0BAAZ,CAAJ,EAA6C;AAClDD,gBAAQQ,KAAKd,GAAG,CAAH,CAAL,CAAR,CADkD,CAC9B;AACrB;AACF,KAND,MAMO,IAAI,QAAOA,GAAG,CAAH,CAAP,MAAiB,QAArB,EAA+B;AACpCM,cAAQN,GAAG,CAAH,CAAR;AACD;AACF,GAlBM,MAkBA,IAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AACnCK,WAAOL,EAAP;AACD;;AAED,MAAI,OAAOK,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAM,IAAIU,KAAJ,CAAUV,OAAO,0BAAjB,CAAN;AACD;;AAED,SAAOA,KAAKW,KAAL,CAAWV,KAAX,EAAkBL,UAAlB,CAAP;AACD,CAxDD","file":"call_user_func_array.js","sourcesContent":["module.exports = function call_user_func_array(cb, parameters) {\n  //  discuss at: https://locutus.io/php/call_user_func_array/\n  // original by: Thiago Mata (https://thiagomata.blog.com)\n  //  revised by: Jon Hohle\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Diplom@t (https://difane.com/)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: Depending on the `cb` that is passed,\n  //      note 1: this function can use `eval` and/or `new Function`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func_array('isNaN', ['a'])\n  //   returns 1: true\n  //   example 2: call_user_func_array('isNaN', [1])\n  //   returns 2: false\n\n  const $global = typeof window !== 'undefined' ? window : global\n  let func\n  let scope = null\n\n  const validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  if (typeof cb === 'string') {\n    if (typeof $global[cb] === 'function') {\n      func = $global[cb]\n    } else if (cb.match(validJSFunctionNamePattern)) {\n      func = new Function(null, 'return ' + cb)() // eslint-disable-line no-new-func\n    }\n  } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n    if (typeof cb[0] === 'string') {\n      if (cb[0].match(validJSFunctionNamePattern)) {\n        func = eval(cb[0] + \"['\" + cb[1] + \"']\") // eslint-disable-line no-eval\n      }\n    } else {\n      func = cb[0][cb[1]]\n    }\n\n    if (typeof cb[0] === 'string') {\n      if (typeof $global[cb[0]] === 'function') {\n        scope = $global[cb[0]]\n      } else if (cb[0].match(validJSFunctionNamePattern)) {\n        scope = eval(cb[0]) // eslint-disable-line no-eval\n      }\n    } else if (typeof cb[0] === 'object') {\n      scope = cb[0]\n    }\n  } else if (typeof cb === 'function') {\n    func = cb\n  }\n\n  if (typeof func !== 'function') {\n    throw new Error(func + ' is not a valid function')\n  }\n\n  return func.apply(scope, parameters)\n}\n"]}