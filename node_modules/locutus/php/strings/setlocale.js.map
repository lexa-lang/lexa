{"version":3,"sources":["../../../src/php/strings/setlocale.js"],"names":["module","exports","setlocale","category","locale","getenv","require","categ","cats","i","_copy","orig","RegExp","Date","newObj","_nplurals2a","n","_nplurals2b","$global","window","global","$locutus","php","locales","fr_CA","LC_TIME","x","en","LC_COLLATE","str1","str2","LC_CTYPE","an","al","ct","dg","gr","lw","pr","pu","sp","up","xd","CODESET","lower","upper","a","A","b","B","c","p","P","r","X","alt_digits","ERA","ERA_YEAR","ERA_D_T_FMT","ERA_D_FMT","ERA_T_FMT","LC_MONETARY","int_curr_symbol","currency_symbol","mon_decimal_point","mon_thousands_sep","mon_grouping","positive_sign","negative_sign","int_frac_digits","frac_digits","p_cs_precedes","p_sep_by_space","n_cs_precedes","n_sep_by_space","p_sign_posn","n_sign_posn","LC_NUMERIC","decimal_point","thousands_sep","grouping","LC_MESSAGES","YESEXPR","NOEXPR","YESSTR","NOSTR","nplurals","en_US","en_GB","en_AU","C","fr","document","d","NS_XHTML","NS_XML","getElementsByTagNameNS","getAttributeNS","getElementsByTagName","lang","replace","localeCategories","Object","prototype","toString","call","length","push","join"],"mappings":"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","file":"setlocale.js","sourcesContent":["module.exports = function setlocale(category, locale) {\n  //  discuss at: https://locutus.io/php/setlocale/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  // original by: Blues (https://hacks.bluesmoon.info/strftime/strftime.js)\n  // original by: YUI Library (https://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html)\n  //      note 1: Is extensible, but currently only implements locales en,\n  //      note 1: en_US, en_GB, en_AU, fr, and fr_CA for LC_TIME only; C for LC_CTYPE;\n  //      note 1: C and en for LC_MONETARY/LC_NUMERIC; en for LC_COLLATE\n  //      note 1: Uses global: locutus to store locale info\n  //      note 1: Consider using https://demo.icu-project.org/icu-bin/locexp as basis for localization (as in i18n_loc_set_default())\n  //      note 2: This function tries to establish the locale via the `window` global.\n  //      note 2: This feature will not work in Node and hence is Browser-only\n  //   example 1: setlocale('LC_ALL', 'en_US')\n  //   returns 1: 'en_US'\n\n  const getenv = require('../info/getenv')\n\n  let categ = ''\n  const cats = []\n  let i = 0\n\n  const _copy = function _copy(orig) {\n    if (orig instanceof RegExp) {\n      return new RegExp(orig)\n    } else if (orig instanceof Date) {\n      return new Date(orig)\n    }\n    const newObj = {}\n    for (const i in orig) {\n      if (typeof orig[i] === 'object') {\n        newObj[i] = _copy(orig[i])\n      } else {\n        newObj[i] = orig[i]\n      }\n    }\n    return newObj\n  }\n\n  // Function usable by a ngettext implementation (apparently not an accessible part of setlocale(),\n  // but locale-specific) See https://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms\n  // though amended with others from https://developer.mozilla.org/En/Localization_and_Plurals (new\n  // categories noted with \"MDC\" below, though not sure of whether there is a convention for the\n  // relative order of these newer groups as far as ngettext) The function name indicates the number\n  // of plural forms (nplural) Need to look into https://cldr.unicode.org/ (maybe future JavaScript);\n  // Dojo has some functions (under new BSD), including JSON conversions of LDML XML from CLDR:\n  // https://bugs.dojotoolkit.org/browser/dojo/trunk/cldr and docs at\n  // https://api.dojotoolkit.org/jsdoc/HEAD/dojo.cldr\n\n  // var _nplurals1 = function (n) {\n  //   // e.g., Japanese\n  //   return 0\n  // }\n  const _nplurals2a = function (n) {\n    // e.g., English\n    return n !== 1 ? 1 : 0\n  }\n  const _nplurals2b = function (n) {\n    // e.g., French\n    return n > 1 ? 1 : 0\n  }\n\n  const $global = typeof window !== 'undefined' ? window : global\n  $global.$locutus = $global.$locutus || {}\n  const $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  // Reconcile Windows vs. *nix locale names?\n  // Allow different priority orders of languages, esp. if implement gettext as in\n  // LANGUAGE env. var.? (e.g., show German if French is not available)\n  if (\n    !$locutus.php.locales ||\n    !$locutus.php.locales.fr_CA ||\n    !$locutus.php.locales.fr_CA.LC_TIME ||\n    !$locutus.php.locales.fr_CA.LC_TIME.x\n  ) {\n    // Can add to the locales\n    $locutus.php.locales = {}\n\n    $locutus.php.locales.en = {\n      LC_COLLATE: function (str1, str2) {\n        // @todo: This one taken from strcmp, but need for other locales; we don't use localeCompare\n        // since its locale is not settable\n        return str1 === str2 ? 0 : str1 > str2 ? 1 : -1\n      },\n      LC_CTYPE: {\n        // Need to change any of these for English as opposed to C?\n        an: /^[A-Za-z\\d]+$/g,\n        al: /^[A-Za-z]+$/g,\n        ct: /^[\\u0000-\\u001F\\u007F]+$/g,\n        dg: /^[\\d]+$/g,\n        gr: /^[\\u0021-\\u007E]+$/g,\n        lw: /^[a-z]+$/g,\n        pr: /^[\\u0020-\\u007E]+$/g,\n        pu: /^[\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E]+$/g,\n        sp: /^[\\f\\n\\r\\t\\v ]+$/g,\n        up: /^[A-Z]+$/g,\n        xd: /^[A-Fa-f\\d]+$/g,\n        CODESET: 'UTF-8',\n        // Used by sql_regcase\n        lower: 'abcdefghijklmnopqrstuvwxyz',\n        upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n      },\n      LC_TIME: {\n        // Comments include nl_langinfo() constant equivalents and any\n        // changes from Blues' implementation\n        a: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        // ABDAY_\n        A: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        // DAY_\n        b: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        // ABMON_\n        B: [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'November',\n          'December',\n        ],\n        // MON_\n        c: '%a %d %b %Y %r %Z',\n        // D_T_FMT // changed %T to %r per results\n        p: ['AM', 'PM'],\n        // AM_STR/PM_STR\n        P: ['am', 'pm'],\n        // Not available in nl_langinfo()\n        r: '%I:%M:%S %p',\n        // T_FMT_AMPM (Fixed for all locales)\n        x: '%m/%d/%Y',\n        // D_FMT // switched order of %m and %d; changed %y to %Y (C uses %y)\n        X: '%r',\n        // T_FMT // changed from %T to %r  (%T is default for C, not English US)\n        // Following are from nl_langinfo() or https://www.cptec.inpe.br/sx4/sx4man2/g1ab02e/strftime.4.html\n        alt_digits: '',\n        // e.g., ordinal\n        ERA: '',\n        ERA_YEAR: '',\n        ERA_D_T_FMT: '',\n        ERA_D_FMT: '',\n        ERA_T_FMT: '',\n      },\n      // Assuming distinction between numeric and monetary is thus:\n      // See below for C locale\n      LC_MONETARY: {\n        // based on Windows \"english\" (English_United States.1252) locale\n        int_curr_symbol: 'USD',\n        currency_symbol: '$',\n        mon_decimal_point: '.',\n        mon_thousands_sep: ',',\n        mon_grouping: [3],\n        // use mon_thousands_sep; \"\" for no grouping; additional array members\n        // indicate successive group lengths after first group\n        // (e.g., if to be 1,23,456, could be [3, 2])\n        positive_sign: '',\n        negative_sign: '-',\n        int_frac_digits: 2,\n        // Fractional digits only for money defaults?\n        frac_digits: 2,\n        p_cs_precedes: 1,\n        // positive currency symbol follows value = 0; precedes value = 1\n        p_sep_by_space: 0,\n        // 0: no space between curr. symbol and value; 1: space sep. them unless symb.\n        // and sign are adjacent then space sep. them from value; 2: space sep. sign\n        // and value unless symb. and sign are adjacent then space separates\n        n_cs_precedes: 1,\n        // see p_cs_precedes\n        n_sep_by_space: 0,\n        // see p_sep_by_space\n        p_sign_posn: 3,\n        // 0: parentheses surround quantity and curr. symbol; 1: sign precedes them;\n        // 2: sign follows them; 3: sign immed. precedes curr. symbol; 4: sign immed.\n        // succeeds curr. symbol\n        n_sign_posn: 0, // see p_sign_posn\n      },\n      LC_NUMERIC: {\n        // based on Windows \"english\" (English_United States.1252) locale\n        decimal_point: '.',\n        thousands_sep: ',',\n        grouping: [3], // see mon_grouping, but for non-monetary values (use thousands_sep)\n      },\n      LC_MESSAGES: {\n        YESEXPR: '^[yY].*',\n        NOEXPR: '^[nN].*',\n        YESSTR: '',\n        NOSTR: '',\n      },\n      nplurals: _nplurals2a,\n    }\n    $locutus.php.locales.en_US = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_US.LC_TIME.c = '%a %d %b %Y %r %Z'\n    $locutus.php.locales.en_US.LC_TIME.x = '%D'\n    $locutus.php.locales.en_US.LC_TIME.X = '%r'\n    // The following are based on *nix settings\n    $locutus.php.locales.en_US.LC_MONETARY.int_curr_symbol = 'USD '\n    $locutus.php.locales.en_US.LC_MONETARY.p_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.n_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.mon_grouping = [3, 3]\n    $locutus.php.locales.en_US.LC_NUMERIC.thousands_sep = ''\n    $locutus.php.locales.en_US.LC_NUMERIC.grouping = []\n\n    $locutus.php.locales.en_GB = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_GB.LC_TIME.r = '%l:%M:%S %P %Z'\n\n    $locutus.php.locales.en_AU = _copy($locutus.php.locales.en_GB)\n    // Assume C locale is like English (?) (We need C locale for LC_CTYPE)\n    $locutus.php.locales.C = _copy($locutus.php.locales.en)\n    $locutus.php.locales.C.LC_CTYPE.CODESET = 'ANSI_X3.4-1968'\n    $locutus.php.locales.C.LC_MONETARY = {\n      int_curr_symbol: '',\n      currency_symbol: '',\n      mon_decimal_point: '',\n      mon_thousands_sep: '',\n      mon_grouping: [],\n      p_cs_precedes: 127,\n      p_sep_by_space: 127,\n      n_cs_precedes: 127,\n      n_sep_by_space: 127,\n      p_sign_posn: 127,\n      n_sign_posn: 127,\n      positive_sign: '',\n      negative_sign: '',\n      int_frac_digits: 127,\n      frac_digits: 127,\n    }\n    $locutus.php.locales.C.LC_NUMERIC = {\n      decimal_point: '.',\n      thousands_sep: '',\n      grouping: [],\n    }\n    // D_T_FMT\n    $locutus.php.locales.C.LC_TIME.c = '%a %b %e %H:%M:%S %Y'\n    // D_FMT\n    $locutus.php.locales.C.LC_TIME.x = '%m/%d/%y'\n    // T_FMT\n    $locutus.php.locales.C.LC_TIME.X = '%H:%M:%S'\n    $locutus.php.locales.C.LC_MESSAGES.YESEXPR = '^[yY]'\n    $locutus.php.locales.C.LC_MESSAGES.NOEXPR = '^[nN]'\n\n    $locutus.php.locales.fr = _copy($locutus.php.locales.en)\n    $locutus.php.locales.fr.nplurals = _nplurals2b\n    $locutus.php.locales.fr.LC_TIME.a = ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam']\n    $locutus.php.locales.fr.LC_TIME.A = ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi']\n    $locutus.php.locales.fr.LC_TIME.b = [\n      'jan',\n      'f\\u00E9v',\n      'mar',\n      'avr',\n      'mai',\n      'jun',\n      'jui',\n      'ao\\u00FB',\n      'sep',\n      'oct',\n      'nov',\n      'd\\u00E9c',\n    ]\n    $locutus.php.locales.fr.LC_TIME.B = [\n      'janvier',\n      'f\\u00E9vrier',\n      'mars',\n      'avril',\n      'mai',\n      'juin',\n      'juillet',\n      'ao\\u00FBt',\n      'septembre',\n      'octobre',\n      'novembre',\n      'd\\u00E9cembre',\n    ]\n    $locutus.php.locales.fr.LC_TIME.c = '%a %d %b %Y %T %Z'\n    $locutus.php.locales.fr.LC_TIME.p = ['', '']\n    $locutus.php.locales.fr.LC_TIME.P = ['', '']\n    $locutus.php.locales.fr.LC_TIME.x = '%d.%m.%Y'\n    $locutus.php.locales.fr.LC_TIME.X = '%T'\n\n    $locutus.php.locales.fr_CA = _copy($locutus.php.locales.fr)\n    $locutus.php.locales.fr_CA.LC_TIME.x = '%Y-%m-%d'\n  }\n  if (!$locutus.php.locale) {\n    $locutus.php.locale = 'en_US'\n    // Try to establish the locale via the `window` global\n    if (typeof window !== 'undefined' && window.document) {\n      const d = window.document\n      const NS_XHTML = 'https://www.w3.org/1999/xhtml'\n      const NS_XML = 'https://www.w3.org/XML/1998/namespace'\n      if (d.getElementsByTagNameNS && d.getElementsByTagNameNS(NS_XHTML, 'html')[0]) {\n        if (\n          d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS &&\n          d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS(NS_XML, 'lang')\n        ) {\n          $locutus.php.locale = d.getElementsByTagName(NS_XHTML, 'html')[0].getAttributeNS(NS_XML, 'lang')\n        } else if (d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang) {\n          // XHTML 1.0 only\n          $locutus.php.locale = d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang\n        }\n      } else if (d.getElementsByTagName('html')[0] && d.getElementsByTagName('html')[0].lang) {\n        $locutus.php.locale = d.getElementsByTagName('html')[0].lang\n      }\n    }\n  }\n  // PHP-style\n  $locutus.php.locale = $locutus.php.locale.replace('-', '_')\n  // @todo: locale if declared locale hasn't been defined\n  if (!($locutus.php.locale in $locutus.php.locales)) {\n    if ($locutus.php.locale.replace(/_[a-zA-Z]+$/, '') in $locutus.php.locales) {\n      $locutus.php.locale = $locutus.php.locale.replace(/_[a-zA-Z]+$/, '')\n    }\n  }\n\n  if (!$locutus.php.localeCategories) {\n    $locutus.php.localeCategories = {\n      LC_COLLATE: $locutus.php.locale,\n      // for string comparison, see strcoll()\n      LC_CTYPE: $locutus.php.locale,\n      // for character classification and conversion, for example strtoupper()\n      LC_MONETARY: $locutus.php.locale,\n      // for localeconv()\n      LC_NUMERIC: $locutus.php.locale,\n      // for decimal separator (See also localeconv())\n      LC_TIME: $locutus.php.locale,\n      // for date and time formatting with strftime()\n      // for system responses (available if PHP was compiled with libintl):\n      LC_MESSAGES: $locutus.php.locale,\n    }\n  }\n\n  if (locale === null || locale === '') {\n    locale = getenv(category) || getenv('LANG')\n  } else if (Object.prototype.toString.call(locale) === '[object Array]') {\n    for (i = 0; i < locale.length; i++) {\n      if (!(locale[i] in $locutus.php.locales)) {\n        if (i === locale.length - 1) {\n          // none found\n          return false\n        }\n        continue\n      }\n      locale = locale[i]\n      break\n    }\n  }\n\n  // Just get the locale\n  if (locale === '0' || locale === 0) {\n    if (category === 'LC_ALL') {\n      for (categ in $locutus.php.localeCategories) {\n        // Add \".UTF-8\" or allow \".@latint\", etc. to the end?\n        cats.push(categ + '=' + $locutus.php.localeCategories[categ])\n      }\n      return cats.join(';')\n    }\n    return $locutus.php.localeCategories[category]\n  }\n\n  if (!(locale in $locutus.php.locales)) {\n    // Locale not found\n    return false\n  }\n\n  // Set and get locale\n  if (category === 'LC_ALL') {\n    for (categ in $locutus.php.localeCategories) {\n      $locutus.php.localeCategories[categ] = locale\n    }\n  } else {\n    $locutus.php.localeCategories[category] = locale\n  }\n\n  return locale\n}\n"]}