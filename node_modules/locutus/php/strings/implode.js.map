{"version":3,"sources":["../../../src/php/strings/implode.js"],"names":["module","exports","implode","glue","pieces","i","retVal","tGlue","arguments","length","Object","prototype","toString","call","join"],"mappings":";;;;AAAAA,OAAOC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,IAAI,EAAR;AACA,MAAIC,SAAS,EAAb;AACA,MAAIC,QAAQ,EAAZ;;AAEA,MAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BL,aAASD,IAAT;AACAA,WAAO,EAAP;AACD;;AAED,MAAI,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAC9B,QAAIM,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BT,MAA/B,MAA2C,gBAA/C,EAAiE;AAC/D,aAAOA,OAAOU,IAAP,CAAYX,IAAZ,CAAP;AACD;AACD,SAAKE,CAAL,IAAUD,MAAV,EAAkB;AAChBE,gBAAUC,QAAQH,OAAOC,CAAP,CAAlB;AACAE,cAAQJ,IAAR;AACD;AACD,WAAOG,MAAP;AACD;;AAED,SAAOF,MAAP;AACD,CAhCD","file":"implode.js","sourcesContent":["module.exports = function implode(glue, pieces) {\n  //  discuss at: https://locutus.io/php/implode/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: Waldo Malqui Silva (https://waldo.malqui.info)\n  // improved by: Itsacon (https://www.itsacon.net/)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: implode(' ', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: implode(' ', {first:'Kevin', last: 'van Zonneveld'})\n  //   returns 2: 'Kevin van Zonneveld'\n\n  let i = ''\n  let retVal = ''\n  let tGlue = ''\n\n  if (arguments.length === 1) {\n    pieces = glue\n    glue = ''\n  }\n\n  if (typeof pieces === 'object') {\n    if (Object.prototype.toString.call(pieces) === '[object Array]') {\n      return pieces.join(glue)\n    }\n    for (i in pieces) {\n      retVal += tGlue + pieces[i]\n      tGlue = glue\n    }\n    return retVal\n  }\n\n  return pieces\n}\n"]}