{"version":3,"sources":["../../../src/php/strings/quoted_printable_decode.js"],"names":["module","exports","quoted_printable_decode","str","RFC2045Decode1","RFC2045Decode2IN","RFC2045Decode2OUT","sMatch","sHex","String","fromCharCode","parseInt","replace"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,iBAAiB,SAAvB;;AAEA;AACA,MAAMC,mBAAmB,mBAAzB;AACA;;AAEA,MAAMC,oBAAoB,SAApBA,iBAAoB,CAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAChD,WAAOC,OAAOC,YAAP,CAAoBC,SAASH,IAAT,EAAe,EAAf,CAApB,CAAP;AACD,GAFD;;AAIA,SAAOL,IAAIS,OAAJ,CAAYR,cAAZ,EAA4B,EAA5B,EAAgCQ,OAAhC,CAAwCP,gBAAxC,EAA0DC,iBAA1D,CAAP;AACD,CA5BD","file":"quoted_printable_decode.js","sourcesContent":["module.exports = function quoted_printable_decode(str) {\n  //       discuss at: https://locutus.io/php/quoted_printable_decode/\n  //      original by: Ole Vrijenhoek\n  //      bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //      bugfixed by: Theriault (https://github.com/Theriault)\n  // reimplemented by: Theriault (https://github.com/Theriault)\n  //      improved by: Brett Zamir (https://brett-zamir.me)\n  //        example 1: quoted_printable_decode('a=3Db=3Dc')\n  //        returns 1: 'a=b=c'\n  //        example 2: quoted_printable_decode('abc  =20\\r\\n123  =20\\r\\n')\n  //        returns 2: 'abc   \\r\\n123   \\r\\n'\n  //        example 3: quoted_printable_decode('012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n56789')\n  //        returns 3: '01234567890123456789012345678901234567890123456789012345678901234567890123456789'\n  //        example 4: quoted_printable_decode(\"Lorem ipsum dolor sit amet=23, consectetur adipisicing elit\")\n  //        returns 4: 'Lorem ipsum dolor sit amet#, consectetur adipisicing elit'\n\n  // Decodes all equal signs followed by two hex digits\n  const RFC2045Decode1 = /=\\r\\n/gm\n\n  // the RFC states against decoding lower case encodings, but following apparent PHP behavior\n  const RFC2045Decode2IN = /=([0-9A-F]{2})/gim\n  // RFC2045Decode2IN = /=([0-9A-F]{2})/gm,\n\n  const RFC2045Decode2OUT = function (sMatch, sHex) {\n    return String.fromCharCode(parseInt(sHex, 16))\n  }\n\n  return str.replace(RFC2045Decode1, '').replace(RFC2045Decode2IN, RFC2045Decode2OUT)\n}\n"]}