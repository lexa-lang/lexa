{"version":3,"sources":["../../../src/php/strings/substr_count.js"],"names":["module","exports","substr_count","haystack","needle","offset","length","cnt","isNaN","indexOf"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,MAAhD,EAAwD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,MAAM,CAAV;;AAEAJ,cAAY,EAAZ;AACAC,YAAU,EAAV;AACA,MAAII,MAAMH,MAAN,CAAJ,EAAmB;AACjBA,aAAS,CAAT;AACD;AACD,MAAIG,MAAMF,MAAN,CAAJ,EAAmB;AACjBA,aAAS,CAAT;AACD;AACD,MAAIF,OAAOE,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAO,KAAP;AACD;AACDD;;AAEA,SAAO,CAACA,SAASF,SAASM,OAAT,CAAiBL,MAAjB,EAAyBC,SAAS,CAAlC,CAAV,MAAoD,CAAC,CAA5D,EAA+D;AAC7D,QAAIC,SAAS,CAAT,IAAcD,SAASD,OAAOE,MAAhB,GAAyBA,MAA3C,EAAmD;AACjD,aAAO,KAAP;AACD;AACDC;AACD;;AAED,SAAOA,GAAP;AACD,CApCD","file":"substr_count.js","sourcesContent":["module.exports = function substr_count(haystack, needle, offset, length) {\n  //  discuss at: https://locutus.io/php/substr_count/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Thomas\n  //   example 1: substr_count('Kevin van Zonneveld', 'e')\n  //   returns 1: 3\n  //   example 2: substr_count('Kevin van Zonneveld', 'K', 1)\n  //   returns 2: 0\n  //   example 3: substr_count('Kevin van Zonneveld', 'Z', 0, 10)\n  //   returns 3: false\n\n  let cnt = 0\n\n  haystack += ''\n  needle += ''\n  if (isNaN(offset)) {\n    offset = 0\n  }\n  if (isNaN(length)) {\n    length = 0\n  }\n  if (needle.length === 0) {\n    return false\n  }\n  offset--\n\n  while ((offset = haystack.indexOf(needle, offset + 1)) !== -1) {\n    if (length > 0 && offset + needle.length > length) {\n      return false\n    }\n    cnt++\n  }\n\n  return cnt\n}\n"]}