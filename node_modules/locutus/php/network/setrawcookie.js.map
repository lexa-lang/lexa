{"version":3,"sources":["../../../src/php/network/setrawcookie.js"],"names":["module","exports","setrawcookie","name","value","expires","path","domain","secure","window","test","parseInt","Date","toUTCString","r","i","s","hasOwnProperty","push","document","cookie","join"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,IAA5C,EAAkDC,MAAlD,EAA0DC,MAA1D,EAAkE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,IAAP;AACD;;AAED,MAAI,OAAOJ,OAAP,KAAmB,QAAnB,IAA+B,QAAQK,IAAR,CAAaL,OAAb,CAAnC,EAA0D;AACxDA,cAAUM,SAASN,OAAT,EAAkB,EAAlB,CAAV;AACD;;AAED,MAAIA,mBAAmBO,IAAvB,EAA6B;AAC3BP,cAAUA,QAAQQ,WAAR,EAAV;AACD,GAFD,MAEO,IAAI,OAAOR,OAAP,KAAmB,QAAvB,EAAiC;AACtCA,cAAU,IAAIO,IAAJ,CAASP,UAAU,GAAnB,EAAwBQ,WAAxB,EAAV;AACD;;AAED,MAAMC,IAAI,CAACX,OAAO,GAAP,GAAaC,KAAd,CAAV;AACA,MAAIW,IAAI,EAAR;AACA,MAAMC,IAAI;AACRX,oBADQ;AAERC,cAFQ;AAGRC;AAHQ,GAAV;AAKA,OAAKQ,CAAL,IAAUC,CAAV,EAAa;AACX,QAAIA,EAAEC,cAAF,CAAiBF,CAAjB,CAAJ,EAAyB;AACvB;AACAC,QAAED,CAAF,KAAQD,EAAEI,IAAF,CAAOH,IAAI,GAAJ,GAAUC,EAAED,CAAF,CAAjB,CAAR;AACD;AACF;;AAED,MAAIP,MAAJ,EAAY;AACVM,MAAEI,IAAF,CAAO,QAAP;AACD;;AAEDT,SAAOU,QAAP,CAAgBC,MAAhB,GAAyBN,EAAEO,IAAF,CAAO,GAAP,CAAzB;;AAEA,SAAO,IAAP;AACD,CA9CD","file":"setrawcookie.js","sourcesContent":["module.exports = function setrawcookie(name, value, expires, path, domain, secure) {\n  //  discuss at: https://locutus.io/php/setrawcookie/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  // original by: setcookie\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  //    input by: Michael\n  //      note 1: This function requires access to the `window` global and is Browser-only\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: setrawcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  if (typeof window === 'undefined') {\n    return true\n  }\n\n  if (typeof expires === 'string' && /^\\d+$/.test(expires)) {\n    expires = parseInt(expires, 10)\n  }\n\n  if (expires instanceof Date) {\n    expires = expires.toUTCString()\n  } else if (typeof expires === 'number') {\n    expires = new Date(expires * 1e3).toUTCString()\n  }\n\n  const r = [name + '=' + value]\n  let i = ''\n  const s = {\n    expires,\n    path,\n    domain,\n  }\n  for (i in s) {\n    if (s.hasOwnProperty(i)) {\n      // Exclude items on Object.prototype\n      s[i] && r.push(i + '=' + s[i])\n    }\n  }\n\n  if (secure) {\n    r.push('secure')\n  }\n\n  window.document.cookie = r.join(';')\n\n  return true\n}\n"]}