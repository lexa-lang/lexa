{"version":3,"sources":["../../../src/php/var/is_numeric.js"],"names":["module","exports","is_numeric","mixedVar","whitespace","join","indexOf","slice","isNaN"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,CACjB,GADiB,EAEjB,IAFiB,EAGjB,IAHiB,EAIjB,IAJiB,EAKjB,IALiB,EAMjB,MANiB,EAOjB,MAPiB,EAQjB,QARiB,EASjB,QATiB,EAUjB,QAViB,EAWjB,QAXiB,EAYjB,QAZiB,EAajB,QAbiB,EAcjB,QAdiB,EAejB,QAfiB,EAgBjB,QAhBiB,EAiBjB,QAjBiB,EAkBjB,QAlBiB,EAmBjB,QAnBiB,EAoBjB,QApBiB,EAqBjB,QArBiB,EAsBjB,QAtBiB,EAuBjBC,IAvBiB,CAuBZ,EAvBY,CAAnB;;AAyBA;AACA,SACE,CAAC,OAAOF,QAAP,KAAoB,QAApB,IAAiC,OAAOA,QAAP,KAAoB,QAApB,IAAgCC,WAAWE,OAAX,CAAmBH,SAASI,KAAT,CAAe,CAAC,CAAhB,CAAnB,MAA2C,CAAC,CAA9G,KACAJ,aAAa,EADb,IAEA,CAACK,MAAML,QAAN,CAHH;AAKD,CArDD","file":"is_numeric.js","sourcesContent":["module.exports = function is_numeric(mixedVar) {\n  //  discuss at: https://locutus.io/php/is_numeric/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: David\n  // improved by: taith\n  // bugfixed by: Tim de Koning\n  // bugfixed by: WebDevHobo (https://webdevhobo.blogspot.com/)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  // bugfixed by: Denis Chenu (https://shnoulle.net)\n  //   example 1: is_numeric(186.31)\n  //   returns 1: true\n  //   example 2: is_numeric('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_numeric(' +186.31e2')\n  //   returns 3: true\n  //   example 4: is_numeric('')\n  //   returns 4: false\n  //   example 5: is_numeric([])\n  //   returns 5: false\n  //   example 6: is_numeric('1 ')\n  //   returns 6: false\n\n  const whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000',\n  ].join('')\n\n  // @todo: Break this up using many single conditions with early returns\n  return (\n    (typeof mixedVar === 'number' || (typeof mixedVar === 'string' && whitespace.indexOf(mixedVar.slice(-1)) === -1)) &&\n    mixedVar !== '' &&\n    !isNaN(mixedVar)\n  )\n}\n"]}