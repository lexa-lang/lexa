/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { type ForegroundColorName, type ModifierName } from 'chalk';
import type { DefaultLoggerCategories, Logger as LoggerApi } from '@yeoman/types';
export type LoggerOptions<Loggers = any, LoggerCategories extends string | number | symbol = DefaultLoggerCategories> = {
    stdin?: NodeJS.ReadStream;
    stdout?: NodeJS.WriteStream;
    stderr?: NodeJS.WriteStream;
    console?: Console;
    colors?: Record<LoggerCategories, ForegroundColorName | ModifierName>;
    loggers?: Loggers;
};
export declare function createLogger<Loggers = any, LoggerCategories extends string | number | symbol = DefaultLoggerCategories>(parameters?: LoggerOptions<Loggers, LoggerCategories>): LoggerApi & Loggers & {
    console: Console;
};
export type Logger = ReturnType<typeof createLogger>;
