import { Stream } from 'readable-stream';
import { OutOfOrder } from './queue.js';
export * from './queue.js';
const pipeline = Stream.promises.pipeline;
export { pipeline };
export const transform = (transform, end) => {
    return new OutOfOrder(transform).duplex(end);
};
/**
 * Shortcut to create a passthrough with spy.
 */
export const passthrough = (spy, end) => transform(async function (chunk) {
    await spy?.call(this, chunk);
    return chunk;
}, end);
/**
 * Create a filter stream.
 */
export const filter = (filter, end) => transform(async function (chunk) {
    const result = await filter(chunk);
    return result ? chunk : undefined;
}, end);
